{
  "VdjBuild": "8709",
  "Items": [
    {
      "category": "flow",
      "action": "down",
      "description": "execute different actions depending if the key if pressed or released: 'down ? action1 : action2'"
    },
    {
      "category": "flow",
      "action": "isrepeat",
      "description": "execute different actions depending if the key is being repeated or if it's the first message (on Windows, keyboard shortcuts are usually auto-repeated while held down): 'isrepeat ? nothing : goto_cue')"
    },
    {
      "category": "flow",
      "action": "nothing",
      "description": "Do nothing."
    },
    {
      "category": "flow",
      "action": "up",
      "description": "execute different actions depending if the key if pressed or released: 'up ? action1 : action2'"
    },
    {
      "category": "param",
      "action": "blink",
      "description": "turn on and off the LED, once per second.You can specify the speed: 'blink 1000ms' Speed can also be specified in number of beats: 'blink 1bt'.The time blinking can also be specified: 'blink 1bt 25%'"
    },
    {
      "category": "param",
      "action": "color",
      "description": "color 'red' color \"#C08040\" color 0.8 0.5 0.25 color 75% 'red' (returns a dimmed red) color 0.66 (returns a gray)"
    },
    {
      "category": "param",
      "action": "color_mix",
      "description": "Mix two colors based on an action in the third parameter color_mix white red `get_limiter`"
    },
    {
      "category": "param",
      "action": "constant",
      "description": "Return the specified value Example: 'get constant 75%' always returns 75%",
      "alias": "get_constant"
    },
    {
      "category": "param",
      "action": "dim",
      "description": "equivalent of \"constant 0.1\""
    },
    {
      "category": "param",
      "action": "fadeout",
      "description": "'loop & fadeout 10000ms 3000ms' will return 100 % when loop is on, and fade out to 0% after 10 seconds in 3 seconds when loop turns off Alternatively, the action can be entered as the third parameter in backticks: 'fadeout 10000ms 3000ms `loop`'"
    },
    {
      "category": "param",
      "action": "false",
      "description": "returns false",
      "alias": "no|off"
    },
    {
      "category": "param",
      "action": "param_1_x",
      "description": "invert the value of the calling slider/encoder/button (calculate 1/x) 'param_1_x & effect slider'"
    },
    {
      "category": "param",
      "action": "param_add",
      "description": "add the given value to the value of the calling slider/ encoder / button add the value of the first parameter with the value of the second parameter.Both parameters can be actions instead of values: 'param_add `get_var a` `get_var b`'"
    },
    {
      "category": "param",
      "action": "param_bigger",
      "description": "check if the value of the calling slider/encoder/button is bigger than something: 'param_bigger 0 ? sampler loop 200% : sampler loop 50%' compare value of the first parameter with the value of the second parameter. Both parameters can be actions instead of values: 'param_bigger pitch pitch_slider'",
      "alias": "param_greater"
    },
    {
      "category": "param",
      "action": "param_cast",
      "description": "cast the value of the previous query action into a new type: 'pitch_range & param_cast \"percentage\"'. Valid types are 'integer', 'float', 'percentage', 'ms', 'boolean', 'beats', 'text'. casting to text can also optionally limit the number of characters: 'get_browsed_song \"artist\" & param_cast \"text\" 5' to format a number as text with a specific number of digits: 'get_bpm & param_cast \"000\"' param_cast 'int_trunc' : provides the integer part of a number without rounding to the nearest integer param_cast 'frac' : provides the decimal part of a number. param_cast 'relative' and param_cast 'absolute' : change the parameter to be a relative or absolute value"
    },
    {
      "category": "param",
      "action": "param_contains",
      "description": "Check if the value of the calling action contains the string in the parameter."
    },
    {
      "category": "param",
      "action": "param_delta",
      "description": "transform an absolute value into relative (example: 0.5, 0.7, 0.8 will become +0.0, +0.2, +0.1)"
    },
    {
      "category": "param",
      "action": "param_equal",
      "description": "Check if the value of the calling slider/encoder/button is equal to something To compare a string with the result of an action, use param_equal `action param` \"string\". For example: param_equal `get_browsed_song 'type'` \"audio\""
    },
    {
      "category": "param",
      "action": "param_invert",
      "description": "invert the value of the calling slider/encoder/button (1-x): 'param_invert & pitch_slider'"
    },
    {
      "category": "param",
      "action": "param_lowercase",
      "description": "change the text result of the previous element in the script into lowercase"
    },
    {
      "category": "param",
      "action": "param_make_discrete",
      "description": "useful for smooth endless encoders, to make them discrete Example: 'param_make_discrete 0.1 & param_bigger 0 ? loop_move +100% : param_smaller 0 ? loop_move - 100%'"
    },
    {
      "category": "param",
      "action": "param_mod",
      "description": "wrap the value of the calling slider/encoder if more than the given value"
    },
    {
      "category": "param",
      "action": "param_multiply",
      "description": "multiply the value of the calling slider/encoder/button by the given value: 'param_multiply 300% & effect slider' The parameter can also be an action 'cue_pos 0 & param_multiply \"get_time total 1000\"'"
    },
    {
      "category": "param",
      "action": "param_pingpong",
      "description": "transform the value of the calling slider/encoder from a linear scale to a forth-and-back scale"
    },
    {
      "category": "param",
      "action": "param_pow",
      "description": "param_pow y : computes the power of the caller to the power of y. Can be 0.5 for calculating square root."
    },
    {
      "category": "param",
      "action": "param_smaller",
      "description": "check if the value of the calling slider/encoder/button is smaller than something: 'param_smaller 0 ? sampler loop 200% : sampler loop 50%'"
    },
    {
      "category": "param",
      "action": "param_ucfirst",
      "description": "change the first letter into upper case and the rest in lower case"
    },
    {
      "category": "param",
      "action": "param_uppercase",
      "description": "change the text result of the previous element in the script into uppercase"
    },
    {
      "category": "param",
      "action": "pulse",
      "description": "return true when the previous action turns to true only for the duration specified: 'is_using 'equalizer' & pulse 2000ms'"
    },
    {
      "category": "param",
      "action": "true",
      "description": "returns true",
      "alias": "on|yes"
    },
    {
      "category": "repeat",
      "action": "doubleclick",
      "description": "execute different actions depending if the key is pressed twice in a short period of time or not: 'doubleclick ? automix : mix_now'. you can specify the time between two presses ('doubleclick 1000ms'), by default it's 300ms."
    },
    {
      "category": "repeat",
      "action": "holding",
      "description": "execute different actions depending if the key is pressed for a long time or not: 'holding ? automix : mix_now'. you can specify the time ('holding 1000ms'), by default it's 500ms."
    },
    {
      "category": "repeat",
      "action": "repeat",
      "description": "repeat the actions every x ms as long as the key is pressed: 'repeat 1000ms & browser_scroll +1' (default is 500ms if no speed is specified. Second parameter can specify a delay before repeating the first time)"
    },
    {
      "category": "repeat",
      "action": "repeat_start",
      "description": "Repeat an action at a specified interval: 'repeat_start 'myrepeatname' 1000ms 5 & browser_scroll +1' (first parameter is an identifier name, second parameter is the interval and the third optional parameter can specify a number of times to repeat). The first action will be performed after an interval has passed. The interval can be specified in milliseconds, beats, or can be an action of itself. 'repeat_start 'myrepeatname' 1bt' or 'repeat_start 'myrepeatname `get_var a`'"
    },
    {
      "category": "repeat",
      "action": "repeat_start_instant",
      "description": "Repeat an action at a specified interval: 'repeat_start_instant 'myrepeatname' 1000ms 5 & browser_scroll +1' (first parameter is an identifier name, second parameter is the interval and the third optional parameter can specify a number of times to repeat). The first action will be performed immediately."
    },
    {
      "category": "repeat",
      "action": "repeat_stop",
      "description": "stop a previous repeat_start or repeat_start_instant action: 'repeat_stop 'myrepeatname''"
    },
    {
      "category": "repeat",
      "action": "wait",
      "description": "wait for the specified amount of time between two script actions: 'wait 1bt & pause', 'wait 500ms & play'"
    },
    {
      "category": "skin",
      "action": "custom_button",
      "description": "a custom button is a button with initially no action, but the action can be written in VDJScript by the user"
    },
    {
      "category": "skin",
      "action": "custom_button_edit",
      "description": "open the custom button editor to set or change the action"
    },
    {
      "category": "skin",
      "action": "custom_button_name",
      "description": "return (or set) the name for this custom button"
    },
    {
      "category": "skin",
      "action": "get_skin_color"
    },
    {
      "category": "skin",
      "action": "has_cover"
    },
    {
      "category": "skin",
      "action": "has_custom_button",
      "description": "returns true if this custom button has an action assigned to it"
    },
    {
      "category": "skin",
      "action": "has_logo"
    },
    {
      "category": "skin",
      "action": "is_using",
      "description": "check if a particular feature is being used('filter', 'equalizer', 'loop', 'cue', 'sample', 'pads', 'effect', 'load') "
    },
    {
      "category": "skin",
      "action": "load_skin",
      "description": "load a new skin. Use syntax \" load_skin ':newvariation' \" to load a different variation inside the same skin file."
    },
    {
      "category": "skin",
      "action": "lock_panel",
      "description": "NOTE: despite the name, this action acts on <split> elements, not <panel>",
      "alias": "lock_pannel"
    },
    {
      "category": "skin",
      "action": "multibutton",
      "description": "Click on the named multibutton: 'multibutton \"my_button\"'"
    },
    {
      "category": "skin",
      "action": "multibutton_select",
      "description": "Open the selection menu for the named multibutton. If a second text parameter is provided after the name, use it as the new action to load in the multibutton: 'multibutton_select \"my_button\" \"goto_cue 2 & play\"'"
    },
    {
      "category": "skin",
      "action": "rack",
      "description": "Open/close a unit in specified rack. Example: \"rack 'rack1' 'unit1'\""
    },
    {
      "category": "skin",
      "action": "rack_prioritize",
      "description": "Prioritizes a unit of the specified rack. When more configurations with same size are available, the prioritized unit will get most space. Example: \"rack_prioritize 'rack1' 'unit1'\""
    },
    {
      "category": "skin",
      "action": "rack_solo",
      "description": "Open/close a unit in full size on the specified rack. Closing the unit will re-open the previous configuration. Example: \"rack_solo 'rack1' 'unit1'\""
    },
    {
      "category": "skin",
      "action": "show_splitpanel",
      "description": "Show/hide the specified split panel Examples: \"show_splitpanel 'sidelist'\", \"show_splitpanel 'sideview' on\", \"show_splitpanel 'sidelist' 50 %\""
    },
    {
      "category": "skin",
      "action": "skin_empty_buttons"
    },
    {
      "category": "skin",
      "action": "skin_height"
    },
    {
      "category": "skin",
      "action": "skin_panel",
      "description": "show or hide a panel on the skin. \"skin_panel 'my_panel' on\"",
      "alias": "skin_pannel"
    },
    {
      "category": "skin",
      "action": "skin_panelgroup",
      "description": "change which panel from a skin panel group is shown. syntax \"skin_panelgroup 'groupname' 'panelname'\" or \"skin_panelgroup 'groupname' +1\" or \"skin_panelgroup 'groupname' 0.75\"",
      "alias": "skin_pannelgroup"
    },
    {
      "category": "skin",
      "action": "skin_panelgroup_available",
      "description": "set a panel to be available or not. panels that are not available will not show up in group cycles"
    },
    {
      "category": "skin",
      "action": "skin_starter_tip"
    },
    {
      "category": "skin",
      "action": "skin_width"
    },
    {
      "category": "skin",
      "action": "switch_skin_variation"
    },
    {
      "category": "skin",
      "action": "zoom",
      "description": "zoom horizontal rhythm and scratch visual",
      "alias": "zoom_scratch"
    },
    {
      "category": "skin",
      "action": "zoom_vertical",
      "description": "zoom vertical scratch wave"
    },
    {
      "category": "system",
      "action": "debug",
      "description": "display the value of the parameter (you can use this to see what values controllers are sending, for example)"
    },
    {
      "category": "system",
      "action": "get_battery",
      "description": "returns how much battery is left on your laptop"
    },
    {
      "category": "system",
      "action": "get_clock",
      "description": "get the current time (use 'get_clock 12' to display AM/PM)"
    },
    {
      "category": "system",
      "action": "get_cpu",
      "description": "get the cpu activity"
    },
    {
      "category": "system",
      "action": "get_date",
      "description": "get the current date (use 'get_date \"format\"' to get the date in a specific format. format can include %Y, %m, %d for year, month and day, %A for weekday)"
    },
    {
      "category": "system",
      "action": "get_peak_audio"
    },
    {
      "category": "system",
      "action": "getfood",
      "description": "because no DJ should work on an empty stomach"
    },
    {
      "category": "system",
      "action": "handshake",
      "description": "Perform an encrypted handshake to ensure that this plugin is currently being called by a real VirtualDJ environment. Call this passing any string, decrypt the result using VirtualDJ's handshake public key, and check that it matches what you passed. See the developer documentation on our website for example code."
    },
    {
      "category": "system",
      "action": "has_battery",
      "description": "returns true if your computer has batteries"
    },
    {
      "category": "system",
      "action": "has_notch",
      "description": "return true when the display has a notch at the top center and the skin is maximized, false otherwise"
    },
    {
      "category": "system",
      "action": "has_system_volume",
      "description": "Returns true when the system volume can be modified"
    },
    {
      "category": "system",
      "action": "is_battery",
      "description": "returns true if your computer is running on batteries"
    },
    {
      "category": "system",
      "action": "is_mac",
      "description": "return true if the computer is a MAC, false if it's a PC",
      "alias": "is_macos"
    },
    {
      "category": "system",
      "action": "is_pc",
      "description": "return true if the computer is a PC, false if it's a MAC (example: <panel visible=\"is_pc\" />)",
      "alias": "is_windows"
    },
    {
      "category": "system",
      "action": "open_help",
      "description": "open the user guide"
    },
    {
      "category": "system",
      "action": "show_keyboard",
      "description": "display an onscreen keyboard"
    },
    {
      "category": "system",
      "action": "system"
    },
    {
      "category": "system",
      "action": "system_volume",
      "description": "Change the system volume of the active sound card when available (use has_system_volume to check)"
    },
    {
      "category": "variables",
      "action": "controllervar",
      "description": "variable that is unique to each controller. You can add # in front of the variable name to make it both deck and controller-dependent"
    },
    {
      "category": "variables",
      "action": "cycle",
      "description": "syntax: 'cycle \"my_var\" 42'. increment my_var, and goes back to 0 when it reaches 42. 'cycle \"my_var\" -42' decrements my_var, and goes to 41 after it reached 0."
    },
    {
      "category": "variables",
      "action": "get_var",
      "description": "get the value of the specified variable"
    },
    {
      "category": "variables",
      "action": "set",
      "description": "set 'varname' 5 sets variable varname to the value 5 set 'varname' 'var2' sets variable varname to the value of variable var2 set 'varname' `play` sets variable varname to the value of the action play"
    },
    {
      "category": "variables",
      "action": "set_var",
      "description": "set the value of the specified variable"
    },
    {
      "category": "variables",
      "action": "set_var_dialog",
      "description": "set_var_dialog 'varname' opens a dialog to enter the value of varname set_var_dialog 'varname' 'information text' opens a dialog to enter the value of varname, and shows the second parameter as informational text"
    },
    {
      "category": "variables",
      "action": "toggle",
      "description": "syntax: 'toggle \"my_var\"'. toggle my_var between true and false."
    },
    {
      "category": "variables",
      "action": "var",
      "description": "var \"my_var\" ? my_action1 : my_action2'. execute my_action1 if my_var is true (non zero), execute my_action2 otherwise. You can also compare var with a specific value: 'var \"my_var\" 1 ? my_action1 : my_action2' execute my_action1 is my_var is 1, or my_action2 otherwise"
    },
    {
      "category": "variables",
      "action": "var_equal",
      "description": "syntax: 'var_equal \"my_var\" 42 ? my_action1 : my_action2'. execute my_action1 if my_var equals 42, execute my_action2 otherwise. syntax: 'var_equal \"this_var\" \"that_var\" ? action1 : action2' execute action1 if this_var equals that_var, execute action2 otherwise"
    },
    {
      "category": "variables",
      "action": "var_greater",
      "description": "syntax: 'var_greater \"my_var\" 42 ? my_action1 : my_action2'. execute my_action1 if my_var is greater than 42, execute my_action2 otherwise."
    },
    {
      "category": "variables",
      "action": "var_list",
      "description": "show a window with a list of your current variables and their values"
    },
    {
      "category": "variables",
      "action": "var_not_equal",
      "description": "syntax: 'var_not_equal \"my_var\" 42 ? my_action1 : my_action2'. execute my_action1 if my_var doesn't equal 42, execute my_action2 otherwise."
    },
    {
      "category": "variables",
      "action": "var_smaller",
      "description": "syntax: 'var_smaller \"my_var\" 42 ? my_action1 : my_action2'. execute my_action1 if my_var is smaller than 42, execute my_action2 otherwise."
    },
    {
      "category": "window",
      "action": "close",
      "description": "close the application."
    },
    {
      "category": "window",
      "action": "maximize",
      "description": "maximize the application to maximized, full screen, or back to windowed. A specific mode can be selected using \"maximize 'windowed'\", \"maximize 'maximized'\" or \"maximize 'fullscreen'\""
    },
    {
      "category": "window",
      "action": "minimize",
      "description": "minimize the application in the taskbar."
    },
    {
      "category": "window",
      "action": "open_stem_creator"
    },
    {
      "category": "window",
      "action": "show_window",
      "description": "on skin with multiple windows, show or hide the specified window"
    },
    {
      "category": "audio",
      "action": "beat_juggle"
    },
    {
      "category": "audio",
      "action": "beatjump"
    },
    {
      "category": "audio",
      "action": "beatjump_pad"
    },
    {
      "category": "audio",
      "action": "beatjump_page"
    },
    {
      "category": "audio",
      "action": "beatjump_select"
    },
    {
      "category": "audio",
      "action": "clone_deck"
    },
    {
      "category": "audio",
      "action": "clone_from_deck"
    },
    {
      "category": "audio",
      "action": "dualdeckmode"
    },
    {
      "category": "audio",
      "action": "dualdeckmode_decks"
    },
    {
      "category": "audio",
      "action": "dump"
    },
    {
      "category": "audio",
      "action": "goto"
    },
    {
      "category": "audio",
      "action": "goto_bar"
    },
    {
      "category": "audio",
      "action": "goto_first_beat"
    },
    {
      "category": "audio",
      "action": "goto_start"
    },
    {
      "category": "audio",
      "action": "mixermode"
    },
    {
      "category": "audio",
      "action": "move_deck"
    },
    {
      "category": "audio",
      "action": "reverse"
    },
    {
      "category": "audio",
      "action": "seek"
    },
    {
      "category": "audio",
      "action": "song_pos"
    },
    {
      "category": "audio",
      "action": "songpos_remain"
    },
    {
      "category": "audio",
      "action": "songpos_warning"
    },
    {
      "category": "audio",
      "action": "stems_split"
    },
    {
      "category": "audio",
      "action": "stems_split_unlink"
    },
    {
      "category": "audio",
      "action": "swap_decks"
    },
    {
      "category": "audio_controls",
      "action": "auto_sync_options"
    },
    {
      "category": "audio_controls",
      "action": "blink_play"
    },
    {
      "category": "audio_controls",
      "action": "deck_options"
    },
    {
      "category": "audio_controls",
      "action": "emergency_play"
    },
    {
      "category": "audio_controls",
      "action": "pause"
    },
    {
      "category": "audio_controls",
      "action": "pause_stop"
    },
    {
      "category": "audio_controls",
      "action": "play"
    },
    {
      "category": "audio_controls",
      "action": "play_button",
      "alias": "play_3button"
    },
    {
      "category": "audio_controls",
      "action": "play_options"
    },
    {
      "category": "audio_controls",
      "action": "play_pause"
    },
    {
      "category": "audio_controls",
      "action": "play_stutter"
    },
    {
      "category": "audio_controls",
      "action": "stop"
    },
    {
      "category": "audio_controls",
      "action": "stop_button",
      "alias": "stop_3button"
    },
    {
      "category": "audio_inputs",
      "action": "aux_volume"
    },
    {
      "category": "audio_inputs",
      "action": "djc_mic"
    },
    {
      "category": "audio_inputs",
      "action": "linein"
    },
    {
      "category": "audio_inputs",
      "action": "linein_rec"
    },
    {
      "category": "audio_inputs",
      "action": "mic",
      "alias": "microphone"
    },
    {
      "category": "audio_inputs",
      "action": "mic_eq_high"
    },
    {
      "category": "audio_inputs",
      "action": "mic_eq_low"
    },
    {
      "category": "audio_inputs",
      "action": "mic_eq_mid"
    },
    {
      "category": "audio_inputs",
      "action": "mic_rec"
    },
    {
      "category": "audio_inputs",
      "action": "mic_talkover"
    },
    {
      "category": "audio_scratch",
      "action": "get_scratch_direction"
    },
    {
      "category": "audio_scratch",
      "action": "get_slip_active"
    },
    {
      "category": "audio_scratch",
      "action": "get_slip_time"
    },
    {
      "category": "audio_scratch",
      "action": "hold",
      "alias": "scratch_hold"
    },
    {
      "category": "audio_scratch",
      "action": "jogwheel",
      "alias": "jog|jog_wheel"
    },
    {
      "category": "audio_scratch",
      "action": "motorwheel"
    },
    {
      "category": "audio_scratch",
      "action": "nudge"
    },
    {
      "category": "audio_scratch",
      "action": "scratch"
    },
    {
      "category": "audio_scratch",
      "action": "scratch_dna"
    },
    {
      "category": "audio_scratch",
      "action": "scratch_dna_editor"
    },
    {
      "category": "audio_scratch",
      "action": "scratch_dna_option"
    },
    {
      "category": "audio_scratch",
      "action": "slip"
    },
    {
      "category": "audio_scratch",
      "action": "slip_mode"
    },
    {
      "category": "audio_scratch",
      "action": "speedwheel"
    },
    {
      "category": "audio_scratch",
      "action": "touchwheel",
      "alias": "scratch_wheel|scratchwheel"
    },
    {
      "category": "audio_scratch",
      "action": "touchwheel_touch",
      "alias": "scratch_wheel_touch|scratchwheel_touch|speedwheel_touch"
    },
    {
      "category": "audio_scratch",
      "action": "vinyl_mode"
    },
    {
      "category": "audio_scratch",
      "action": "wheel_mode"
    },
    {
      "category": "audio_volumes",
      "action": "auto_crossfade",
      "alias": "auto_crossfader"
    },
    {
      "category": "audio_volumes",
      "action": "booth_volume"
    },
    {
      "category": "audio_volumes",
      "action": "colorfx_prefader"
    },
    {
      "category": "audio_volumes",
      "action": "crossfader",
      "alias": "crossfader_slider"
    },
    {
      "category": "audio_volumes",
      "action": "crossfader_curve"
    },
    {
      "category": "audio_volumes",
      "action": "crossfader_disable"
    },
    {
      "category": "audio_volumes",
      "action": "crossfader_hamster"
    },
    {
      "category": "audio_volumes",
      "action": "fake_eq"
    },
    {
      "category": "audio_volumes",
      "action": "fake_filter"
    },
    {
      "category": "audio_volumes",
      "action": "fake_gain"
    },
    {
      "category": "audio_volumes",
      "action": "fake_hp"
    },
    {
      "category": "audio_volumes",
      "action": "fake_hpmix"
    },
    {
      "category": "audio_volumes",
      "action": "fake_master"
    },
    {
      "category": "audio_volumes",
      "action": "fake_mixer"
    },
    {
      "category": "audio_volumes",
      "action": "fake_pfl"
    },
    {
      "category": "audio_volumes",
      "action": "gain",
      "alias": "gain_slider|power_gain"
    },
    {
      "category": "audio_volumes",
      "action": "gain_label"
    },
    {
      "category": "audio_volumes",
      "action": "gain_relative"
    },
    {
      "category": "audio_volumes",
      "action": "get_crossfader_result"
    },
    {
      "category": "audio_volumes",
      "action": "get_level"
    },
    {
      "category": "audio_volumes",
      "action": "get_level_left"
    },
    {
      "category": "audio_volumes",
      "action": "get_level_left_peak"
    },
    {
      "category": "audio_volumes",
      "action": "get_level_log"
    },
    {
      "category": "audio_volumes",
      "action": "get_level_peak"
    },
    {
      "category": "audio_volumes",
      "action": "get_level_right"
    },
    {
      "category": "audio_volumes",
      "action": "get_level_right_peak"
    },
    {
      "category": "audio_volumes",
      "action": "get_limiter"
    },
    {
      "category": "audio_volumes",
      "action": "get_vu_meter"
    },
    {
      "category": "audio_volumes",
      "action": "get_vu_meter_left"
    },
    {
      "category": "audio_volumes",
      "action": "get_vu_meter_left_peak"
    },
    {
      "category": "audio_volumes",
      "action": "get_vu_meter_peak"
    },
    {
      "category": "audio_volumes",
      "action": "get_vu_meter_right"
    },
    {
      "category": "audio_volumes",
      "action": "get_vu_meter_right_peak"
    },
    {
      "category": "audio_volumes",
      "action": "headphone_crossfader"
    },
    {
      "category": "audio_volumes",
      "action": "headphone_gain"
    },
    {
      "category": "audio_volumes",
      "action": "headphone_mix"
    },
    {
      "category": "audio_volumes",
      "action": "headphone_volume"
    },
    {
      "category": "audio_volumes",
      "action": "is_audible"
    },
    {
      "category": "audio_volumes",
      "action": "level",
      "alias": "level_slider|volume|volume_slider"
    },
    {
      "category": "audio_volumes",
      "action": "levelfader_curve",
      "alias": "fader_curve"
    },
    {
      "category": "audio_volumes",
      "action": "master_balance"
    },
    {
      "category": "audio_volumes",
      "action": "master_volume"
    },
    {
      "category": "audio_volumes",
      "action": "mic2_volume"
    },
    {
      "category": "audio_volumes",
      "action": "mic_volume"
    },
    {
      "category": "audio_volumes",
      "action": "mono_mix"
    },
    {
      "category": "audio_volumes",
      "action": "mute"
    },
    {
      "category": "audio_volumes",
      "action": "set_gain"
    },
    {
      "category": "automix",
      "action": "automix"
    },
    {
      "category": "automix",
      "action": "automix_add_next"
    },
    {
      "category": "automix",
      "action": "automix_dualdeck"
    },
    {
      "category": "automix",
      "action": "automix_editor"
    },
    {
      "category": "automix",
      "action": "automix_editor_movetrack"
    },
    {
      "category": "automix",
      "action": "automix_skip"
    },
    {
      "category": "automix",
      "action": "create_list_from_playlist",
      "alias": "create_virtualfolder_from_playlist"
    },
    {
      "category": "automix",
      "action": "get_automix_position"
    },
    {
      "category": "automix",
      "action": "get_automix_song"
    },
    {
      "category": "automix",
      "action": "get_playlist_time"
    },
    {
      "category": "automix",
      "action": "mix_and_load_next"
    },
    {
      "category": "automix",
      "action": "mix_next"
    },
    {
      "category": "automix",
      "action": "mix_next_sidelist"
    },
    {
      "category": "automix",
      "action": "mix_now"
    },
    {
      "category": "automix",
      "action": "mix_now_nosync"
    },
    {
      "category": "automix",
      "action": "mix_selected"
    },
    {
      "category": "automix",
      "action": "playlist_add"
    },
    {
      "category": "automix",
      "action": "playlist_clear"
    },
    {
      "category": "automix",
      "action": "playlist_load_and_keep"
    },
    {
      "category": "automix",
      "action": "playlist_load_and_remove"
    },
    {
      "category": "automix",
      "action": "playlist_options"
    },
    {
      "category": "automix",
      "action": "playlist_randomize"
    },
    {
      "category": "automix",
      "action": "playlist_randomize_once"
    },
    {
      "category": "automix",
      "action": "playlist_remove_duplicates"
    },
    {
      "category": "automix",
      "action": "playlist_remove_played"
    },
    {
      "category": "automix",
      "action": "playlist_repeat"
    },
    {
      "category": "automix",
      "action": "playlist_save"
    },
    {
      "category": "automix",
      "action": "relay_play"
    },
    {
      "category": "automix",
      "action": "sidelist_options"
    },
    {
      "category": "automix",
      "action": "switch_sidelist_playlist"
    },
    {
      "category": "browser",
      "action": "add_favoritefolder"
    },
    {
      "category": "browser",
      "action": "add_filterfolder"
    },
    {
      "category": "browser",
      "action": "add_list",
      "alias": "add_virtualfolder"
    },
    {
      "category": "browser",
      "action": "add_to_list",
      "alias": "virtualfolder_add"
    },
    {
      "category": "browser",
      "action": "browsed_file_analyze"
    },
    {
      "category": "browser",
      "action": "browsed_file_color"
    },
    {
      "category": "browser",
      "action": "browsed_file_info"
    },
    {
      "category": "browser",
      "action": "browsed_file_prepare_stems"
    },
    {
      "category": "browser",
      "action": "browsed_file_reload_tag"
    },
    {
      "category": "browser",
      "action": "browsed_file_rename"
    },
    {
      "category": "browser",
      "action": "browsed_file_reveal"
    },
    {
      "category": "browser",
      "action": "browser_enter"
    },
    {
      "category": "browser",
      "action": "browser_export"
    },
    {
      "category": "browser",
      "action": "browser_folder"
    },
    {
      "category": "browser",
      "action": "browser_geniusdj"
    },
    {
      "category": "browser",
      "action": "browser_gotofolder"
    },
    {
      "category": "browser",
      "action": "browser_isactive"
    },
    {
      "category": "browser",
      "action": "browser_move"
    },
    {
      "category": "browser",
      "action": "browser_open_folder"
    },
    {
      "category": "browser",
      "action": "browser_options"
    },
    {
      "category": "browser",
      "action": "browser_padding"
    },
    {
      "category": "browser",
      "action": "browser_remove"
    },
    {
      "category": "browser",
      "action": "browser_scroll"
    },
    {
      "category": "browser",
      "action": "browser_shortcut"
    },
    {
      "category": "browser",
      "action": "browser_sort"
    },
    {
      "category": "browser",
      "action": "browser_window"
    },
    {
      "category": "browser",
      "action": "browser_zoom",
      "alias": "browser"
    },
    {
      "category": "browser",
      "action": "clear_search"
    },
    {
      "category": "browser",
      "action": "edit_comment"
    },
    {
      "category": "browser",
      "action": "edit_search"
    },
    {
      "category": "browser",
      "action": "edit_singer"
    },
    {
      "category": "browser",
      "action": "file_count"
    },
    {
      "category": "browser",
      "action": "file_info"
    },
    {
      "category": "browser",
      "action": "font_size"
    },
    {
      "category": "browser",
      "action": "goto_last_folder"
    },
    {
      "category": "browser",
      "action": "grid_view"
    },
    {
      "category": "browser",
      "action": "has_linked_tracks"
    },
    {
      "category": "browser",
      "action": "has_quick_filter"
    },
    {
      "category": "browser",
      "action": "info_options",
      "alias": "infos_options"
    },
    {
      "category": "browser",
      "action": "karaoke_add"
    },
    {
      "category": "browser",
      "action": "karaoke_load"
    },
    {
      "category": "browser",
      "action": "load"
    },
    {
      "category": "browser",
      "action": "load_deck_set"
    },
    {
      "category": "browser",
      "action": "load_next"
    },
    {
      "category": "browser",
      "action": "load_previous"
    },
    {
      "category": "browser",
      "action": "load_pulse"
    },
    {
      "category": "browser",
      "action": "load_pulse_active"
    },
    {
      "category": "browser",
      "action": "loaded"
    },
    {
      "category": "browser",
      "action": "log_search"
    },
    {
      "category": "browser",
      "action": "mark_linked_tracks",
      "alias": "mark_related_tracks"
    },
    {
      "category": "browser",
      "action": "not_played"
    },
    {
      "category": "browser",
      "action": "page"
    },
    {
      "category": "browser",
      "action": "playlist_load"
    },
    {
      "category": "browser",
      "action": "quick_filter"
    },
    {
      "category": "browser",
      "action": "rating"
    },
    {
      "category": "browser",
      "action": "recurse_folder"
    },
    {
      "category": "browser",
      "action": "save_deck_set"
    },
    {
      "category": "browser",
      "action": "search"
    },
    {
      "category": "browser",
      "action": "search_add"
    },
    {
      "category": "browser",
      "action": "search_delete"
    },
    {
      "category": "browser",
      "action": "search_folder"
    },
    {
      "category": "browser",
      "action": "search_options"
    },
    {
      "category": "browser",
      "action": "search_playlists"
    },
    {
      "category": "browser",
      "action": "set_browsed_file_bpm"
    },
    {
      "category": "browser",
      "action": "sidelist_add"
    },
    {
      "category": "browser",
      "action": "sidelist_clear"
    },
    {
      "category": "browser",
      "action": "sidelist_load"
    },
    {
      "category": "browser",
      "action": "sidelist_load_and_keep"
    },
    {
      "category": "browser",
      "action": "sidelist_load_and_remove"
    },
    {
      "category": "browser",
      "action": "sidereco_options"
    },
    {
      "category": "browser",
      "action": "sidereco_song"
    },
    {
      "category": "browser",
      "action": "sidereco_source"
    },
    {
      "category": "browser",
      "action": "sideview"
    },
    {
      "category": "browser",
      "action": "sideview_options"
    },
    {
      "category": "browser",
      "action": "sideview_sort"
    },
    {
      "category": "browser",
      "action": "sideview_title"
    },
    {
      "category": "browser",
      "action": "sideview_triggerpad"
    },
    {
      "category": "browser",
      "action": "undo_load"
    },
    {
      "category": "browser",
      "action": "unload"
    },
    {
      "category": "browser",
      "action": "view_options"
    },
    {
      "category": "config",
      "action": "apply_audio_config"
    },
    {
      "category": "config",
      "action": "auto_cue"
    },
    {
      "category": "config",
      "action": "auto_match_bpm"
    },
    {
      "category": "config",
      "action": "auto_match_key"
    },
    {
      "category": "config",
      "action": "auto_pitch_lock"
    },
    {
      "category": "config",
      "action": "connect"
    },
    {
      "category": "config",
      "action": "eventscheduler"
    },
    {
      "category": "config",
      "action": "eventscheduler_start"
    },
    {
      "category": "config",
      "action": "fader_start"
    },
    {
      "category": "config",
      "action": "get_lemode"
    },
    {
      "category": "config",
      "action": "play_mode"
    },
    {
      "category": "config",
      "action": "quantize_loop"
    },
    {
      "category": "config",
      "action": "quantize_setcue"
    },
    {
      "category": "config",
      "action": "save_config",
      "alias": "saveregistryconfig"
    },
    {
      "category": "config",
      "action": "setting"
    },
    {
      "category": "config",
      "action": "setting_ismodified"
    },
    {
      "category": "config",
      "action": "setting_reset"
    },
    {
      "category": "config",
      "action": "setting_setdefault"
    },
    {
      "category": "config",
      "action": "setting_setsession"
    },
    {
      "category": "config",
      "action": "setting_setsession_deck"
    },
    {
      "category": "config",
      "action": "settings",
      "alias": "config"
    },
    {
      "category": "config",
      "action": "smart_cue"
    },
    {
      "category": "config",
      "action": "smart_loop"
    },
    {
      "category": "config",
      "action": "smart_play",
      "alias": "auto_sync"
    },
    {
      "category": "config",
      "action": "smart_scratch"
    },
    {
      "category": "controllers",
      "action": "action_deck"
    },
    {
      "category": "controllers",
      "action": "assign_controller"
    },
    {
      "category": "controllers",
      "action": "controller_battery"
    },
    {
      "category": "controllers",
      "action": "controller_mapping"
    },
    {
      "category": "controllers",
      "action": "controllerscreen_deck"
    },
    {
      "category": "controllers",
      "action": "denon_platter"
    },
    {
      "category": "controllers",
      "action": "device_side"
    },
    {
      "category": "controllers",
      "action": "display_time"
    },
    {
      "category": "controllers",
      "action": "djc_button"
    },
    {
      "category": "controllers",
      "action": "djc_button_popup"
    },
    {
      "category": "controllers",
      "action": "djc_button_select"
    },
    {
      "category": "controllers",
      "action": "djc_button_slider"
    },
    {
      "category": "controllers",
      "action": "djc_panel"
    },
    {
      "category": "controllers",
      "action": "djc_shift"
    },
    {
      "category": "controllers",
      "action": "effect_fxsendreturndeck"
    },
    {
      "category": "controllers",
      "action": "effect_fxsendreturndeck_multi"
    },
    {
      "category": "controllers",
      "action": "effect_fxsendreturnenable"
    },
    {
      "category": "controllers",
      "action": "gemini_waveform_zoomlevel"
    },
    {
      "category": "controllers",
      "action": "get_controller_image"
    },
    {
      "category": "controllers",
      "action": "get_controller_name"
    },
    {
      "category": "controllers",
      "action": "get_controller_screen"
    },
    {
      "category": "controllers",
      "action": "get_denon_cuepoints"
    },
    {
      "category": "controllers",
      "action": "get_denon_platter"
    },
    {
      "category": "controllers",
      "action": "get_display"
    },
    {
      "category": "controllers",
      "action": "get_gemini_display"
    },
    {
      "category": "controllers",
      "action": "get_gemini_waveform"
    },
    {
      "category": "controllers",
      "action": "get_ns7_platter"
    },
    {
      "category": "controllers",
      "action": "get_numark_beatgrid"
    },
    {
      "category": "controllers",
      "action": "get_numark_songpos"
    },
    {
      "category": "controllers",
      "action": "get_numark_waveform"
    },
    {
      "category": "controllers",
      "action": "get_pioneer_display"
    },
    {
      "category": "controllers",
      "action": "get_pioneer_loop_display"
    },
    {
      "category": "controllers",
      "action": "get_rotation_cue"
    },
    {
      "category": "controllers",
      "action": "get_rotation_slip"
    },
    {
      "category": "controllers",
      "action": "invert_controllers"
    },
    {
      "category": "controllers",
      "action": "keyboard_shortcuts"
    },
    {
      "category": "controllers",
      "action": "menu"
    },
    {
      "category": "controllers",
      "action": "menu_button"
    },
    {
      "category": "controllers",
      "action": "menu_cycledisplay"
    },
    {
      "category": "controllers",
      "action": "midiclock_active"
    },
    {
      "category": "controllers",
      "action": "miditovst_active"
    },
    {
      "category": "controllers",
      "action": "mixer_order"
    },
    {
      "category": "controllers",
      "action": "motor_switch"
    },
    {
      "category": "controllers",
      "action": "motorwheel_instant_play"
    },
    {
      "category": "controllers",
      "action": "ns7_platter"
    },
    {
      "category": "controllers",
      "action": "numark_waveform_zoom"
    },
    {
      "category": "controllers",
      "action": "os2l_button"
    },
    {
      "category": "controllers",
      "action": "os2l_cmd"
    },
    {
      "category": "controllers",
      "action": "os2l_info"
    },
    {
      "category": "controllers",
      "action": "os2l_scene"
    },
    {
      "category": "controllers",
      "action": "phase_movement"
    },
    {
      "category": "controllers",
      "action": "phase_position"
    },
    {
      "category": "controllers",
      "action": "pioneer_cue"
    },
    {
      "category": "controllers",
      "action": "pioneer_play"
    },
    {
      "category": "controllers",
      "action": "refresh_controller"
    },
    {
      "category": "controllers",
      "action": "reinit_controller"
    },
    {
      "category": "controllers",
      "action": "rescan_controllers"
    },
    {
      "category": "controllers",
      "action": "rzx_touch"
    },
    {
      "category": "controllers",
      "action": "rzx_touch_x"
    },
    {
      "category": "controllers",
      "action": "rzx_touch_y"
    },
    {
      "category": "controllers",
      "action": "select_master_output"
    },
    {
      "category": "controllers",
      "action": "set_deck"
    },
    {
      "category": "controllers",
      "action": "shift"
    },
    {
      "category": "controllers",
      "action": "show_text"
    },
    {
      "category": "controllers",
      "action": "v7_status"
    },
    {
      "category": "cues",
      "action": "cue"
    },
    {
      "category": "cues",
      "action": "cue_action"
    },
    {
      "category": "cues",
      "action": "cue_button",
      "alias": "cue_3button"
    },
    {
      "category": "cues",
      "action": "cue_color"
    },
    {
      "category": "cues",
      "action": "cue_countdown"
    },
    {
      "category": "cues",
      "action": "cue_counter"
    },
    {
      "category": "cues",
      "action": "cue_countup"
    },
    {
      "category": "cues",
      "action": "cue_cup"
    },
    {
      "category": "cues",
      "action": "cue_display"
    },
    {
      "category": "cues",
      "action": "cue_loop"
    },
    {
      "category": "cues",
      "action": "cue_loop_autosync"
    },
    {
      "category": "cues",
      "action": "cue_loop_hold"
    },
    {
      "category": "cues",
      "action": "cue_name"
    },
    {
      "category": "cues",
      "action": "cue_play"
    },
    {
      "category": "cues",
      "action": "cue_pos"
    },
    {
      "category": "cues",
      "action": "cue_select"
    },
    {
      "category": "cues",
      "action": "cue_stop"
    },
    {
      "category": "cues",
      "action": "cues_options"
    },
    {
      "category": "cues",
      "action": "delete_cue"
    },
    {
      "category": "cues",
      "action": "get_cue"
    },
    {
      "category": "cues",
      "action": "goto_cue"
    },
    {
      "category": "cues",
      "action": "has_cue"
    },
    {
      "category": "cues",
      "action": "hot_cue",
      "alias": "hotcue"
    },
    {
      "category": "cues",
      "action": "lock_cues"
    },
    {
      "category": "cues",
      "action": "set_cue"
    },
    {
      "category": "cues",
      "action": "shift_all_cues"
    },
    {
      "category": "cues",
      "action": "silent_cue"
    },
    {
      "category": "cues",
      "action": "sort_cues"
    },
    {
      "category": "deck_select",
      "action": "cross_assign"
    },
    {
      "category": "deck_select",
      "action": "get_deck_color"
    },
    {
      "category": "deck_select",
      "action": "invert_deck"
    },
    {
      "category": "deck_select",
      "action": "leftcross"
    },
    {
      "category": "deck_select",
      "action": "leftdeck"
    },
    {
      "category": "deck_select",
      "action": "masterdeck"
    },
    {
      "category": "deck_select",
      "action": "masterdeck_auto"
    },
    {
      "category": "deck_select",
      "action": "pfl"
    },
    {
      "category": "deck_select",
      "action": "rightcross"
    },
    {
      "category": "deck_select",
      "action": "rightdeck"
    },
    {
      "category": "deck_select",
      "action": "select"
    },
    {
      "category": "equalizer",
      "action": "eq_crossfader_high"
    },
    {
      "category": "equalizer",
      "action": "eq_crossfader_low"
    },
    {
      "category": "equalizer",
      "action": "eq_crossfader_mid",
      "alias": "eq_crossfader_med"
    },
    {
      "category": "equalizer",
      "action": "eq_high",
      "alias": "eq_high_slider"
    },
    {
      "category": "equalizer",
      "action": "eq_high_freq"
    },
    {
      "category": "equalizer",
      "action": "eq_kill_high"
    },
    {
      "category": "equalizer",
      "action": "eq_kill_low"
    },
    {
      "category": "equalizer",
      "action": "eq_kill_mid",
      "alias": "eq_kill_med"
    },
    {
      "category": "equalizer",
      "action": "eq_low",
      "alias": "eq_low_slider"
    },
    {
      "category": "equalizer",
      "action": "eq_low_freq"
    },
    {
      "category": "equalizer",
      "action": "eq_mid",
      "alias": "eq_med\neq_mid_slider"
    },
    {
      "category": "equalizer",
      "action": "eq_mid_freq"
    },
    {
      "category": "equalizer",
      "action": "eq_mode"
    },
    {
      "category": "equalizer",
      "action": "eq_reset"
    },
    {
      "category": "equalizer",
      "action": "filter",
      "alias": "filter_slider"
    },
    {
      "category": "equalizer",
      "action": "filter_activate"
    },
    {
      "category": "equalizer",
      "action": "filter_label"
    },
    {
      "category": "equalizer",
      "action": "filter_resonance"
    },
    {
      "category": "equalizer",
      "action": "filter_selectcolorfx"
    },
    {
      "category": "equalizer",
      "action": "has_stems"
    },
    {
      "category": "equalizer",
      "action": "high_label"
    },
    {
      "category": "equalizer",
      "action": "low_label"
    },
    {
      "category": "equalizer",
      "action": "mid_label"
    },
    {
      "category": "equalizer",
      "action": "mute_stem"
    },
    {
      "category": "equalizer",
      "action": "only_stem"
    },
    {
      "category": "equalizer",
      "action": "stem"
    },
    {
      "category": "equalizer",
      "action": "stem_color"
    },
    {
      "category": "equalizer",
      "action": "stem_pad"
    },
    {
      "category": "equalizer",
      "action": "stems_bleed"
    },
    {
      "category": "get",
      "action": "browsed_song"
    },
    {
      "category": "get",
      "action": "browsed_song_hashtag"
    },
    {
      "category": "get",
      "action": "get_activedeck"
    },
    {
      "category": "get",
      "action": "get_album"
    },
    {
      "category": "get",
      "action": "get_arm"
    },
    {
      "category": "get",
      "action": "get_artist"
    },
    {
      "category": "get",
      "action": "get_artist_before_feat"
    },
    {
      "category": "get",
      "action": "get_artist_title"
    },
    {
      "category": "get",
      "action": "get_artist_title_separator"
    },
    {
      "category": "get",
      "action": "get_askthedj"
    },
    {
      "category": "get",
      "action": "get_askthedj_unread"
    },
    {
      "category": "get",
      "action": "get_automix"
    },
    {
      "category": "get",
      "action": "get_bar"
    },
    {
      "category": "get",
      "action": "get_beat"
    },
    {
      "category": "get",
      "action": "get_beat2"
    },
    {
      "category": "get",
      "action": "get_beat_bar"
    },
    {
      "category": "get",
      "action": "get_beat_counter"
    },
    {
      "category": "get",
      "action": "get_beat_num"
    },
    {
      "category": "get",
      "action": "get_beatdiff"
    },
    {
      "category": "get",
      "action": "get_beatgrid"
    },
    {
      "category": "get",
      "action": "get_beatpos"
    },
    {
      "category": "get",
      "action": "get_bpm"
    },
    {
      "category": "get",
      "action": "get_browsed_album"
    },
    {
      "category": "get",
      "action": "get_browsed_artist"
    },
    {
      "category": "get",
      "action": "get_browsed_artist_title"
    },
    {
      "category": "get",
      "action": "get_browsed_bpm"
    },
    {
      "category": "get",
      "action": "get_browsed_color"
    },
    {
      "category": "get",
      "action": "get_browsed_comment"
    },
    {
      "category": "get",
      "action": "get_browsed_composer"
    },
    {
      "category": "get",
      "action": "get_browsed_filepath"
    },
    {
      "category": "get",
      "action": "get_browsed_folder"
    },
    {
      "category": "get",
      "action": "get_browsed_folder_icon"
    },
    {
      "category": "get",
      "action": "get_browsed_folder_path"
    },
    {
      "category": "get",
      "action": "get_browsed_folder_scrollpos"
    },
    {
      "category": "get",
      "action": "get_browsed_folder_scrollsize"
    },
    {
      "category": "get",
      "action": "get_browsed_folder_selection_index"
    },
    {
      "category": "get",
      "action": "get_browsed_folder_tab"
    },
    {
      "category": "get",
      "action": "get_browsed_genre"
    },
    {
      "category": "get",
      "action": "get_browsed_header"
    },
    {
      "category": "get",
      "action": "get_browsed_key"
    },
    {
      "category": "get",
      "action": "get_browsed_scrollpos"
    },
    {
      "category": "get",
      "action": "get_browsed_scrollsize"
    },
    {
      "category": "get",
      "action": "get_browsed_selection_index"
    },
    {
      "category": "get",
      "action": "get_browsed_song"
    },
    {
      "category": "get",
      "action": "get_browsed_title"
    },
    {
      "category": "get",
      "action": "get_browsed_title_artist"
    },
    {
      "category": "get",
      "action": "get_build"
    },
    {
      "category": "get",
      "action": "get_comment"
    },
    {
      "category": "get",
      "action": "get_composer"
    },
    {
      "category": "get",
      "action": "get_custom_text"
    },
    {
      "category": "get",
      "action": "get_deck"
    },
    {
      "category": "get",
      "action": "get_deck_analysis"
    },
    {
      "category": "get",
      "action": "get_deck_letter"
    },
    {
      "category": "get",
      "action": "get_decks"
    },
    {
      "category": "get",
      "action": "get_defaultdeck"
    },
    {
      "category": "get",
      "action": "get_featuring_after_artist"
    },
    {
      "category": "get",
      "action": "get_filename"
    },
    {
      "category": "get",
      "action": "get_filepath"
    },
    {
      "category": "get",
      "action": "get_filesize"
    },
    {
      "category": "get",
      "action": "get_firstbeat"
    },
    {
      "category": "get",
      "action": "get_firstbeat_local"
    },
    {
      "category": "get",
      "action": "get_genre"
    },
    {
      "category": "get",
      "action": "get_hasheadphones",
      "alias": "get_hasheadphone"
    },
    {
      "category": "get",
      "action": "get_hasinput"
    },
    {
      "category": "get",
      "action": "get_haslinein"
    },
    {
      "category": "get",
      "action": "get_hasmaster"
    },
    {
      "category": "get",
      "action": "get_hasmic"
    },
    {
      "category": "get",
      "action": "get_hwnd"
    },
    {
      "category": "get",
      "action": "get_leftdeck"
    },
    {
      "category": "get",
      "action": "get_license"
    },
    {
      "category": "get",
      "action": "get_loaded_song"
    },
    {
      "category": "get",
      "action": "get_loaded_song_color"
    },
    {
      "category": "get",
      "action": "get_membership"
    },
    {
      "category": "get",
      "action": "get_phrase_num"
    },
    {
      "category": "get",
      "action": "get_plugindeck"
    },
    {
      "category": "get",
      "action": "get_position"
    },
    {
      "category": "get",
      "action": "get_record_message"
    },
    {
      "category": "get",
      "action": "get_record_min"
    },
    {
      "category": "get",
      "action": "get_record_ms"
    },
    {
      "category": "get",
      "action": "get_record_msf"
    },
    {
      "category": "get",
      "action": "get_record_sec"
    },
    {
      "category": "get",
      "action": "get_record_size"
    },
    {
      "category": "get",
      "action": "get_record_time"
    },
    {
      "category": "get",
      "action": "get_remix_after_title"
    },
    {
      "category": "get",
      "action": "get_rightdeck"
    },
    {
      "category": "get",
      "action": "get_rotation"
    },
    {
      "category": "get",
      "action": "get_song_event"
    },
    {
      "category": "get",
      "action": "get_songlength"
    },
    {
      "category": "get",
      "action": "get_spectrum_band"
    },
    {
      "category": "get",
      "action": "get_time"
    },
    {
      "category": "get",
      "action": "get_time_hour"
    },
    {
      "category": "get",
      "action": "get_time_min"
    },
    {
      "category": "get",
      "action": "get_time_ms"
    },
    {
      "category": "get",
      "action": "get_time_msf"
    },
    {
      "category": "get",
      "action": "get_time_sec"
    },
    {
      "category": "get",
      "action": "get_time_sign"
    },
    {
      "category": "get",
      "action": "get_title"
    },
    {
      "category": "get",
      "action": "get_title_artist"
    },
    {
      "category": "get",
      "action": "get_title_before_remix"
    },
    {
      "category": "get",
      "action": "get_title_remix"
    },
    {
      "category": "get",
      "action": "get_totaltime_min"
    },
    {
      "category": "get",
      "action": "get_totaltime_ms"
    },
    {
      "category": "get",
      "action": "get_totaltime_msf"
    },
    {
      "category": "get",
      "action": "get_totaltime_sec"
    },
    {
      "category": "get",
      "action": "get_username"
    },
    {
      "category": "get",
      "action": "get_vdj_folder"
    },
    {
      "category": "get",
      "action": "get_version"
    },
    {
      "category": "get",
      "action": "get_volume"
    },
    {
      "category": "get",
      "action": "get_year"
    },
    {
      "category": "get",
      "action": "has_aux"
    },
    {
      "category": "get",
      "action": "loaded_song"
    },
    {
      "category": "get",
      "action": "loaded_song_hashtag"
    },
    {
      "category": "get",
      "action": "prelisten_info"
    },
    {
      "category": "karaoke",
      "action": "get_karaoke_background_song"
    },
    {
      "category": "karaoke",
      "action": "get_next_karaoke_song"
    },
    {
      "category": "karaoke",
      "action": "has_karaoke_next"
    },
    {
      "category": "karaoke",
      "action": "is_karaoke_idle"
    },
    {
      "category": "karaoke",
      "action": "is_karaoke_playing"
    },
    {
      "category": "karaoke",
      "action": "karaoke"
    },
    {
      "category": "karaoke",
      "action": "karaoke_options"
    },
    {
      "category": "karaoke",
      "action": "karaoke_show"
    },
    {
      "category": "karaoke",
      "action": "karaoke_venue_name"
    },
    {
      "category": "key",
      "action": "get_harmonic"
    },
    {
      "category": "key",
      "action": "get_key"
    },
    {
      "category": "key",
      "action": "get_key_color"
    },
    {
      "category": "key",
      "action": "get_key_modifier"
    },
    {
      "category": "key",
      "action": "get_key_modifier_text"
    },
    {
      "category": "key",
      "action": "key"
    },
    {
      "category": "key",
      "action": "key_lock",
      "alias": "keylock"
    },
    {
      "category": "key",
      "action": "key_match_button"
    },
    {
      "category": "key",
      "action": "key_match_menu"
    },
    {
      "category": "key",
      "action": "key_move"
    },
    {
      "category": "key",
      "action": "key_smooth"
    },
    {
      "category": "key",
      "action": "keycue_pad"
    },
    {
      "category": "key",
      "action": "keycue_pad_color"
    },
    {
      "category": "key",
      "action": "keycue_pad_jump"
    },
    {
      "category": "key",
      "action": "keycue_pad_page"
    },
    {
      "category": "key",
      "action": "match_key"
    },
    {
      "category": "key",
      "action": "set_key"
    },
    {
      "category": "loop",
      "action": "get_active_loop"
    },
    {
      "category": "loop",
      "action": "get_loop"
    },
    {
      "category": "loop",
      "action": "get_loop_in_time"
    },
    {
      "category": "loop",
      "action": "get_loop_out_time"
    },
    {
      "category": "loop",
      "action": "get_saved_loop"
    },
    {
      "category": "loop",
      "action": "loop"
    },
    {
      "category": "loop",
      "action": "loop_adjust"
    },
    {
      "category": "loop",
      "action": "loop_back"
    },
    {
      "category": "loop",
      "action": "loop_button"
    },
    {
      "category": "loop",
      "action": "loop_color"
    },
    {
      "category": "loop",
      "action": "loop_delete"
    },
    {
      "category": "loop",
      "action": "loop_double"
    },
    {
      "category": "loop",
      "action": "loop_exit"
    },
    {
      "category": "loop",
      "action": "loop_half"
    },
    {
      "category": "loop",
      "action": "loop_in"
    },
    {
      "category": "loop",
      "action": "loop_length"
    },
    {
      "category": "loop",
      "action": "loop_load"
    },
    {
      "category": "loop",
      "action": "loop_load_prepare"
    },
    {
      "category": "loop",
      "action": "loop_move"
    },
    {
      "category": "loop",
      "action": "loop_options"
    },
    {
      "category": "loop",
      "action": "loop_out"
    },
    {
      "category": "loop",
      "action": "loop_pad"
    },
    {
      "category": "loop",
      "action": "loop_pad_mode"
    },
    {
      "category": "loop",
      "action": "loop_pad_page"
    },
    {
      "category": "loop",
      "action": "loop_position"
    },
    {
      "category": "loop",
      "action": "loop_roll"
    },
    {
      "category": "loop",
      "action": "loop_roll_mode"
    },
    {
      "category": "loop",
      "action": "loop_save"
    },
    {
      "category": "loop",
      "action": "loop_select"
    },
    {
      "category": "loop",
      "action": "pioneer_loop"
    },
    {
      "category": "loop",
      "action": "pioneer_loop_in"
    },
    {
      "category": "loop",
      "action": "pioneer_loop_out"
    },
    {
      "category": "loop",
      "action": "reloop"
    },
    {
      "category": "loop",
      "action": "reloop_exit"
    },
    {
      "category": "loop",
      "action": "repeat_song"
    },
    {
      "category": "loop",
      "action": "saved_loop"
    },
    {
      "category": "loop",
      "action": "saved_loop_autotrigger"
    },
    {
      "category": "loop",
      "action": "saved_loop_display"
    },
    {
      "category": "loop",
      "action": "saved_loop_prepare"
    },
    {
      "category": "loop",
      "action": "slicer"
    },
    {
      "category": "macro",
      "action": "macro_play"
    },
    {
      "category": "macro",
      "action": "macro_record"
    },
    {
      "category": "pads",
      "action": "pad"
    },
    {
      "category": "pads",
      "action": "pad_bank2"
    },
    {
      "category": "pads",
      "action": "pad_button_color"
    },
    {
      "category": "pads",
      "action": "pad_color"
    },
    {
      "category": "pads",
      "action": "pad_edit"
    },
    {
      "category": "pads",
      "action": "pad_has_16pads"
    },
    {
      "category": "pads",
      "action": "pad_has_action"
    },
    {
      "category": "pads",
      "action": "pad_has_color"
    },
    {
      "category": "pads",
      "action": "pad_has_menu"
    },
    {
      "category": "pads",
      "action": "pad_has_param"
    },
    {
      "category": "pads",
      "action": "pad_has_pressure"
    },
    {
      "category": "pads",
      "action": "pad_menu"
    },
    {
      "category": "pads",
      "action": "pad_page",
      "alias": "pad_pages"
    },
    {
      "category": "pads",
      "action": "pad_page_select",
      "alias": "pad_page_favorite_select"
    },
    {
      "category": "pads",
      "action": "pad_param"
    },
    {
      "category": "pads",
      "action": "pad_param2"
    },
    {
      "category": "pads",
      "action": "pad_param_visible"
    },
    {
      "category": "pads",
      "action": "pad_pressure"
    },
    {
      "category": "pads",
      "action": "pad_pushed"
    },
    {
      "category": "pads",
      "action": "padfx"
    },
    {
      "category": "pads",
      "action": "padfx_single"
    },
    {
      "category": "pads",
      "action": "padshift"
    },
    {
      "category": "pads",
      "action": "padshift_button_color"
    },
    {
      "category": "pads",
      "action": "padshift_pressure"
    },
    {
      "category": "pitch",
      "action": "backspin"
    },
    {
      "category": "pitch",
      "action": "brakespeed"
    },
    {
      "category": "pitch",
      "action": "get_pitch"
    },
    {
      "category": "pitch",
      "action": "get_pitch_value"
    },
    {
      "category": "pitch",
      "action": "get_pitch_zero"
    },
    {
      "category": "pitch",
      "action": "master_tempo"
    },
    {
      "category": "pitch",
      "action": "pitch",
      "alias": "pitch2|pitch2_slider|pitch_slider"
    },
    {
      "category": "pitch",
      "action": "pitch_bend"
    },
    {
      "category": "pitch",
      "action": "pitch_lock",
      "alias": "pitchlock"
    },
    {
      "category": "pitch",
      "action": "pitch_motorized"
    },
    {
      "category": "pitch",
      "action": "pitch_range"
    },
    {
      "category": "pitch",
      "action": "pitch_relative"
    },
    {
      "category": "pitch",
      "action": "pitch_reset"
    },
    {
      "category": "pitch",
      "action": "pitch_zero"
    },
    {
      "category": "pitch",
      "action": "startupspeed"
    },
    {
      "category": "plugins",
      "action": "effect_3slots_layout"
    },
    {
      "category": "plugins",
      "action": "effect_active",
      "alias": "effect_activate"
    },
    {
      "category": "plugins",
      "action": "effect_arm_active"
    },
    {
      "category": "plugins",
      "action": "effect_arm_beats"
    },
    {
      "category": "plugins",
      "action": "effect_arm_bpm"
    },
    {
      "category": "plugins",
      "action": "effect_arm_deck"
    },
    {
      "category": "plugins",
      "action": "effect_arm_select"
    },
    {
      "category": "plugins",
      "action": "effect_arm_slider"
    },
    {
      "category": "plugins",
      "action": "effect_arm_slider_label"
    },
    {
      "category": "plugins",
      "action": "effect_arm_slider_name"
    },
    {
      "category": "plugins",
      "action": "effect_arm_slider_text"
    },
    {
      "category": "plugins",
      "action": "effect_arm_slot"
    },
    {
      "category": "plugins",
      "action": "effect_arm_stem"
    },
    {
      "category": "plugins",
      "action": "effect_bank_load"
    },
    {
      "category": "plugins",
      "action": "effect_bank_save"
    },
    {
      "category": "plugins",
      "action": "effect_beats"
    },
    {
      "category": "plugins",
      "action": "effect_beats_all"
    },
    {
      "category": "plugins",
      "action": "effect_bpm_deck"
    },
    {
      "category": "plugins",
      "action": "effect_bpm_deck_tap"
    },
    {
      "category": "plugins",
      "action": "effect_button"
    },
    {
      "category": "plugins",
      "action": "effect_clone"
    },
    {
      "category": "plugins",
      "action": "effect_colorfx"
    },
    {
      "category": "plugins",
      "action": "effect_colorslider"
    },
    {
      "category": "plugins",
      "action": "effect_command"
    },
    {
      "category": "plugins",
      "action": "effect_disable_all"
    },
    {
      "category": "plugins",
      "action": "effect_dock_gui"
    },
    {
      "category": "plugins",
      "action": "effect_has_beats"
    },
    {
      "category": "plugins",
      "action": "effect_has_button"
    },
    {
      "category": "plugins",
      "action": "effect_has_length"
    },
    {
      "category": "plugins",
      "action": "effect_has_slider"
    },
    {
      "category": "plugins",
      "action": "effect_mixfx"
    },
    {
      "category": "plugins",
      "action": "effect_mixfx_activate"
    },
    {
      "category": "plugins",
      "action": "effect_mixfx_select"
    },
    {
      "category": "plugins",
      "action": "effect_releaseslider"
    },
    {
      "category": "plugins",
      "action": "effect_releaseslider_active"
    },
    {
      "category": "plugins",
      "action": "effect_select"
    },
    {
      "category": "plugins",
      "action": "effect_select_multi"
    },
    {
      "category": "plugins",
      "action": "effect_select_popup"
    },
    {
      "category": "plugins",
      "action": "effect_select_toggle"
    },
    {
      "category": "plugins",
      "action": "effect_show_gui"
    },
    {
      "category": "plugins",
      "action": "effect_slider",
      "alias": "effect_slider_slider"
    },
    {
      "category": "plugins",
      "action": "effect_slider_active",
      "alias": "effect_slider_activate"
    },
    {
      "category": "plugins",
      "action": "effect_slider_reset"
    },
    {
      "category": "plugins",
      "action": "effect_slider_skip_length"
    },
    {
      "category": "plugins",
      "action": "effect_stems"
    },
    {
      "category": "plugins",
      "action": "effect_stems_color"
    },
    {
      "category": "plugins",
      "action": "effects_used"
    },
    {
      "category": "plugins",
      "action": "get_effect_button_count"
    },
    {
      "category": "plugins",
      "action": "get_effect_button_name"
    },
    {
      "category": "plugins",
      "action": "get_effect_button_shortname"
    },
    {
      "category": "plugins",
      "action": "get_effect_name"
    },
    {
      "category": "plugins",
      "action": "get_effect_slider_count"
    },
    {
      "category": "plugins",
      "action": "get_effect_slider_default"
    },
    {
      "category": "plugins",
      "action": "get_effect_slider_label"
    },
    {
      "category": "plugins",
      "action": "get_effect_slider_label_full"
    },
    {
      "category": "plugins",
      "action": "get_effect_slider_name"
    },
    {
      "category": "plugins",
      "action": "get_effect_slider_shortname"
    },
    {
      "category": "plugins",
      "action": "get_effect_slider_text"
    },
    {
      "category": "plugins",
      "action": "get_effect_string",
      "alias": "effect_string"
    },
    {
      "category": "plugins",
      "action": "get_effect_string_name"
    },
    {
      "category": "plugins",
      "action": "get_effect_title"
    },
    {
      "category": "plugins",
      "action": "get_effects_used"
    },
    {
      "category": "plugins",
      "action": "get_nb_multicam"
    },
    {
      "category": "plugins",
      "action": "get_video_fx_slider_label"
    },
    {
      "category": "plugins",
      "action": "get_videofx_name"
    },
    {
      "category": "plugins",
      "action": "get_videotrans_name"
    },
    {
      "category": "plugins",
      "action": "is_releasefx"
    },
    {
      "category": "plugins",
      "action": "pluginsongpos"
    },
    {
      "category": "plugins",
      "action": "show_pluginpage"
    },
    {
      "category": "plugins",
      "action": "video_fx"
    },
    {
      "category": "plugins",
      "action": "video_fx_button"
    },
    {
      "category": "plugins",
      "action": "video_fx_clear"
    },
    {
      "category": "plugins",
      "action": "video_fx_select"
    },
    {
      "category": "plugins",
      "action": "video_fx_slider",
      "alias": "video_fx_slider_slider"
    },
    {
      "category": "plugins",
      "action": "video_source"
    },
    {
      "category": "plugins",
      "action": "video_source_select"
    },
    {
      "category": "plugins",
      "action": "video_transition_button"
    },
    {
      "category": "plugins",
      "action": "video_transition_select"
    },
    {
      "category": "plugins",
      "action": "video_transition_slider",
      "alias": "video_transition_slider_slider"
    },
    {
      "category": "poi",
      "action": "adjust_cbg"
    },
    {
      "category": "poi",
      "action": "beat_tap"
    },
    {
      "category": "poi",
      "action": "edit_bpm"
    },
    {
      "category": "poi",
      "action": "edit_poi"
    },
    {
      "category": "poi",
      "action": "goto_mixpoint"
    },
    {
      "category": "poi",
      "action": "reanalyze"
    },
    {
      "category": "poi",
      "action": "set_bpm"
    },
    {
      "category": "poi",
      "action": "set_firstbeat"
    },
    {
      "category": "poi",
      "action": "set_loadpoint"
    },
    {
      "category": "poi",
      "action": "set_mixpoint"
    },
    {
      "category": "prelisten",
      "action": "prelisten",
      "alias": "preview"
    },
    {
      "category": "prelisten",
      "action": "prelisten_options"
    },
    {
      "category": "prelisten",
      "action": "prelisten_output"
    },
    {
      "category": "prelisten",
      "action": "prelisten_pos"
    },
    {
      "category": "prelisten",
      "action": "prelisten_stop"
    },
    {
      "category": "record",
      "action": "broadcast"
    },
    {
      "category": "record",
      "action": "broadcast_message"
    },
    {
      "category": "record",
      "action": "record"
    },
    {
      "category": "record",
      "action": "record_config"
    },
    {
      "category": "record",
      "action": "record_cut"
    },
    {
      "category": "record",
      "action": "record_vu"
    },
    {
      "category": "sampler",
      "action": "get_sample_color"
    },
    {
      "category": "sampler",
      "action": "get_sample_info"
    },
    {
      "category": "sampler",
      "action": "get_sample_name",
      "alias": "get_sample_slot_name"
    },
    {
      "category": "sampler",
      "action": "get_sampler_bank"
    },
    {
      "category": "sampler",
      "action": "get_sampler_bank_count"
    },
    {
      "category": "sampler",
      "action": "get_sampler_bank_id"
    },
    {
      "category": "sampler",
      "action": "get_sampler_count"
    },
    {
      "category": "sampler",
      "action": "get_sampler_slot"
    },
    {
      "category": "sampler",
      "action": "sampler_abort_rec"
    },
    {
      "category": "sampler",
      "action": "sampler_assign"
    },
    {
      "category": "sampler",
      "action": "sampler_bank"
    },
    {
      "category": "sampler",
      "action": "sampler_color"
    },
    {
      "category": "sampler",
      "action": "sampler_edit"
    },
    {
      "category": "sampler",
      "action": "sampler_group_color"
    },
    {
      "category": "sampler",
      "action": "sampler_group_mute"
    },
    {
      "category": "sampler",
      "action": "sampler_group_name"
    },
    {
      "category": "sampler",
      "action": "sampler_group_volume"
    },
    {
      "category": "sampler",
      "action": "sampler_has_group"
    },
    {
      "category": "sampler",
      "action": "sampler_load_to_deck"
    },
    {
      "category": "sampler",
      "action": "sampler_loaded"
    },
    {
      "category": "sampler",
      "action": "sampler_loop"
    },
    {
      "category": "sampler",
      "action": "sampler_mode",
      "alias": "sampler_rapidfire"
    },
    {
      "category": "sampler",
      "action": "sampler_mute"
    },
    {
      "category": "sampler",
      "action": "sampler_options"
    },
    {
      "category": "sampler",
      "action": "sampler_output"
    },
    {
      "category": "sampler",
      "action": "sampler_pad"
    },
    {
      "category": "sampler",
      "action": "sampler_pad_page"
    },
    {
      "category": "sampler",
      "action": "sampler_pad_shift"
    },
    {
      "category": "sampler",
      "action": "sampler_pad_volume"
    },
    {
      "category": "sampler",
      "action": "sampler_pfl"
    },
    {
      "category": "sampler",
      "action": "sampler_play"
    },
    {
      "category": "sampler",
      "action": "sampler_play_stop"
    },
    {
      "category": "sampler",
      "action": "sampler_play_stutter"
    },
    {
      "category": "sampler",
      "action": "sampler_position"
    },
    {
      "category": "sampler",
      "action": "sampler_rec"
    },
    {
      "category": "sampler",
      "action": "sampler_rec_delete"
    },
    {
      "category": "sampler",
      "action": "sampler_select",
      "alias": "sampler_default"
    },
    {
      "category": "sampler",
      "action": "sampler_start_rec"
    },
    {
      "category": "sampler",
      "action": "sampler_stop"
    },
    {
      "category": "sampler",
      "action": "sampler_stop_rec"
    },
    {
      "category": "sampler",
      "action": "sampler_used",
      "alias": "get_sampler_used"
    },
    {
      "category": "sampler",
      "action": "sampler_velocity"
    },
    {
      "category": "sampler",
      "action": "sampler_volume"
    },
    {
      "category": "sampler",
      "action": "sampler_volume_master"
    },
    {
      "category": "sampler",
      "action": "sampler_volume_nogroup"
    },
    {
      "category": "sampler",
      "action": "scratchbank_assign"
    },
    {
      "category": "sampler",
      "action": "scratchbank_edit"
    },
    {
      "category": "sampler",
      "action": "scratchbank_load"
    },
    {
      "category": "sampler",
      "action": "scratchbank_load_to_deck"
    },
    {
      "category": "sampler",
      "action": "scratchbank_unload",
      "alias": "sampler_unload_from_deck"
    },
    {
      "category": "sandbox",
      "action": "can_sandbox"
    },
    {
      "category": "sandbox",
      "action": "sandbox"
    },
    {
      "category": "sync",
      "action": "auto_bpm_transition"
    },
    {
      "category": "sync",
      "action": "auto_bpm_transition_options"
    },
    {
      "category": "sync",
      "action": "auto_sync_settings"
    },
    {
      "category": "sync",
      "action": "beatlock"
    },
    {
      "category": "sync",
      "action": "get_bpm_match"
    },
    {
      "category": "sync",
      "action": "is_sync"
    },
    {
      "category": "sync",
      "action": "match_bpm"
    },
    {
      "category": "sync",
      "action": "match_gain"
    },
    {
      "category": "sync",
      "action": "phrase_sync"
    },
    {
      "category": "sync",
      "action": "play_onbeat"
    },
    {
      "category": "sync",
      "action": "play_sync"
    },
    {
      "category": "sync",
      "action": "play_sync_onbeat",
      "alias": "sync_nocbg"
    },
    {
      "category": "sync",
      "action": "quantize_all"
    },
    {
      "category": "sync",
      "action": "smart_fader"
    },
    {
      "category": "sync",
      "action": "sync"
    },
    {
      "category": "sync",
      "action": "sync_hint"
    },
    {
      "category": "text",
      "action": "countdown"
    },
    {
      "category": "text",
      "action": "get_status"
    },
    {
      "category": "text",
      "action": "get_text"
    },
    {
      "category": "text",
      "action": "stopwatch"
    },
    {
      "category": "text",
      "action": "stopwatch_reset"
    },
    {
      "category": "timecode",
      "action": "get_hastimecode"
    },
    {
      "category": "timecode",
      "action": "get_timecode_quality"
    },
    {
      "category": "timecode",
      "action": "invert_timecode"
    },
    {
      "category": "timecode",
      "action": "timecode_active"
    },
    {
      "category": "timecode",
      "action": "timecode_bypass"
    },
    {
      "category": "timecode",
      "action": "timecode_cd_mode"
    },
    {
      "category": "timecode",
      "action": "timecode_config"
    },
    {
      "category": "timecode",
      "action": "timecode_mode"
    },
    {
      "category": "timecode",
      "action": "timecode_motor_enable"
    },
    {
      "category": "timecode",
      "action": "timecode_options"
    },
    {
      "category": "timecode",
      "action": "timecode_pitch"
    },
    {
      "category": "timecode",
      "action": "timecode_reset_pitch"
    },
    {
      "category": "video",
      "action": "has_video_mix"
    },
    {
      "category": "video",
      "action": "is_audioonlyvisualisation"
    },
    {
      "category": "video",
      "action": "is_video"
    },
    {
      "category": "video",
      "action": "leftvideo"
    },
    {
      "category": "video",
      "action": "leftvideo_button"
    },
    {
      "category": "video",
      "action": "over_video",
      "alias": "overvideo"
    },
    {
      "category": "video",
      "action": "rightvideo"
    },
    {
      "category": "video",
      "action": "rightvideo_button"
    },
    {
      "category": "video",
      "action": "video"
    },
    {
      "category": "video",
      "action": "video_crossfader"
    },
    {
      "category": "video",
      "action": "video_crossfader_auto"
    },
    {
      "category": "video",
      "action": "video_crossfader_link"
    },
    {
      "category": "video",
      "action": "video_delay"
    },
    {
      "category": "video",
      "action": "video_fadetoblack"
    },
    {
      "category": "video",
      "action": "video_level"
    },
    {
      "category": "video",
      "action": "video_output"
    },
    {
      "category": "video",
      "action": "video_transition"
    }
  ]
}